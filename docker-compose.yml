version: '3.8'

services:
  # MongoDB Database
  mongodb:
    image: mongo:7.0
    container_name: movie-app-mongodb
    restart: unless-stopped
    ports:
      - "27017:27017"
    environment:
      MONGO_INITDB_ROOT_USERNAME: huynguy127
      MONGO_INITDB_ROOT_PASSWORD: TjZfvyIBEV82Q68i
      MONGO_INITDB_DATABASE: movie-ranking
    volumes:
      - mongodb_data:/data/db
      - ./init-mongo.js:/docker-entrypoint-initdb.d/init-mongo.js:ro
    networks:
      - movie-network

  # Backend API
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: movie-app-backend
    restart: unless-stopped
    ports:
      - "5000:5000"
    environment:
      - NODE_ENV=production
      - PORT=5000
      - MONGODB_URI="mongodb+srv://huynguy127:TjZfvyIBEV82Q68i@movies.a6nkis5.mongodb.net/?retryWrites=true&w=majority&appName=movies"
    depends_on:
      - mongodb
    networks:
      - movie-network
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:5000/api/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Frontend Application
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: movie-app-frontend
    restart: unless-stopped
    ports:
      - "80:80"
    depends_on:
      - backend
    networks:
      - movie-network

volumes:
  mongodb_data:

networks:
  movie-network:
    driver: bridge
